网站架构流程：
传统架构（SSH）、分布式架构（以项目模块进行划分）、SOA架构（面向与服务架构）、微服务架构

服务与服务的调用，一般都走TCP协议+二进制传输，只要暴露IP地址和端口号就可以实现访问；

RPC远程调用过程（Socket、Netty、HttpClient）
传统的RPC远程调用，有什么缺点：缺少服务治理，当服务比较多的情况下，URL地址管理起来非常复杂；
Dubbo解决服务治理问题，核心技术通过注册中心
使用服务治理，解决每个服务与服务之间的依赖关系，可以实现负载均衡、服务注册与发现、容错等；
SpringCloud与Dubbo都属于Rpc远程调用框架；

生产者Provider
消费者Consumer
注册中心Registry
监控中心Monitor
1、当生产者启动的时候，会将自己的服务信息注册到注册中心（Zookeeper）上去；
2、将当前服务的接口（Class完整路径）作为Key，Value为实际Dubbo协议调用地址以临时节点+持久节点方式存放在Zookeeper路径上；
3、消费者采用订阅的方式获取服务接口地址；
4、Zookeeper的核心（节点和事件通知）
事件通知：当节点发生变化的时候（新增、删除、修改），都会通知订阅者；
5、消费者在获取地址之后，然后采用本地的RPC远程调用技术
软件负载别名为本地负载均衡
6、监控（DubboAdmin平台）

环境步骤
1、安装Zookeeper
2、创建Maven项目搭建生产者和消费者
3、安装DubboAdmin平台，实现服务监控管理